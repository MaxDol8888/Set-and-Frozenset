#Hapilin

N,K = [int(i) for i in input().split()]
mnoj = set()
for i in range(K):
    a, b = [int(j) for j in input().split()]
    for j in range(a,N+1,b):
        if j%7 != 6 and j%7 != 0:
            mnoj.add(j)
print(len(mnoj))


N, K = [int(s) for s in input().split()]
work_days = set([day for day in range(1, N + 1) if day % 7 not in (6, 0)])
no_strikes = set(work_days)
for party in range(K):
    a, b = [int(s) for s in input().split()]
    max_strikes = (N - a) // b + 1
    no_strikes -= {a + b*i for i in range(max_strikes)}
print(len(work_days) - len(no_strikes))


N, K = [int(s) for s in input().split()]
A = set()
for i in range(K):
    a, b = [int(s) for s in input().split()]
    x = 0
    while a + (x * b) <= N:
        q = a + (x * b)
        if (q % 7) != 0 and (q % 7) != 6:
            A.add(q)
        x += 1
print(len(set(A)))


n, k = [int(i) for i in input().split()]
all_strikes = set()
for i in range(k):
    a_i, b_i = [int(i) for i in input().split()]
    s = set(range(1, n + 1))
    s -= set(range(6, n + 1, 7)) | set(range(7, n + 1, 7))
    s &= set(range(a_i, n + 1, b_i))
    all_strikes |= s
print(len(all_strikes))


n, k = input().split()
n, k = int(n), int(k)
days = set()
for i in range(k):
    a_i, b_i = input().split()
    a_i, b_i = int(a_i), int(b_i)
    day = a_i
    i = day
    day %= 7
    while i <= n:
        if day % 6 and day % 7 and i not in days:
            days.add(i)
        day += b_i
        i += b_i
        day %= 7
print(len(days))
